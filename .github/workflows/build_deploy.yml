name: Build, deploy

on:
 push:
  branches: [master,main]

jobs:
  tfsec:
    name: tfsec sarif report
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:

      - uses: actions/checkout@v3
      
      - name: tfsec
        uses: aquasecurity/tfsec-sarif-action@v0.1.4
        with:
          sarif_file: tfsec.sarif

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: tfsec.sarif

  build_deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:

      - uses: actions/checkout@v3

      - name: setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1
    
      - name: Install dependencies
        run: |
          pip install -r requirements.txt -t . 
          zip -r lambda_function_payload.zip .
    
      - name: Terraform Init
        run: terraform init
  
      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -input=false
        continue-on-error: true
    
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false